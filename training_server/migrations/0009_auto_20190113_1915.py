# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2019-01-13 19:15
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('training_server', '0008_autokerasconfig_verbose'),
    ]

    operations = [
        migrations.CreateModel(
            name='ValidationResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scoring_strategy', models.CharField(blank=True, choices=[('accuracy', 'Accuracy'), ('precision', 'Precision'), ('roc_auc', 'Roc_Auc')], max_length=30, null=True)),
                ('score', models.FloatField(blank=True, max_length=10, null=True)),
                ('additional_remarks', models.CharField(blank=True, max_length=2048, null=True)),
                ('status', models.CharField(blank=True, choices=[('waiting', 'Waiting for thread'), ('in_progress', 'In progress'), ('success', 'Success'), ('fail', 'Fail')], max_length=32, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='algorithmconfig',
            name='input_data_filename',
        ),
        migrations.RemoveField(
            model_name='algorithmconfig',
            name='labels_filename',
        ),
        migrations.AddField(
            model_name='algorithmconfig',
            name='handle_one_hot_encoding',
            field=models.BooleanField(default=True, help_text='Handle one hot encoding by labeling the data with string instead to be accepted.'),
        ),
        migrations.AddField(
            model_name='algorithmconfig',
            name='make_one_hot_encoding_task_binary',
            field=models.BooleanField(default=False, help_text='Only possible for categorical data with one-hot-encoding. If the flag is checked, the first option is assumed to be option 0 and all options afterwards are assuemd to be option 1'),
        ),
        migrations.AddField(
            model_name='algorithmconfig',
            name='training_data_filename',
            field=models.CharField(default='merged_folds_training_x.npy', help_text='Filename or path to the training data file originating from ml_data folder', max_length=256),
        ),
        migrations.AddField(
            model_name='algorithmconfig',
            name='training_labels_filename',
            field=models.CharField(default='merged_folds_training_y.npy', help_text='Filename or path to the training labels file originating from ml_data folder', max_length=256),
        ),
        migrations.AddField(
            model_name='algorithmconfig',
            name='training_name',
            field=models.CharField(default='Unnamed', max_length=256),
        ),
        migrations.AddField(
            model_name='algorithmconfig',
            name='validation_data_filename',
            field=models.CharField(default='merged_folds_validation_x.npy', help_text='Filename or path to the validation data file originating from ml_data folder', max_length=256),
        ),
        migrations.AddField(
            model_name='algorithmconfig',
            name='validation_labels_filename',
            field=models.CharField(default='merged_folds_validation_y.npy', help_text='Filename or path to the validation labels file originating from ml_data folder', max_length=256),
        ),
        migrations.AddField(
            model_name='validationresult',
            name='model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='training_server.AlgorithmConfig'),
        ),
    ]
